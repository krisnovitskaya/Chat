package ru.gb.java2.client.window;

import ru.gb.java2.client.controller.ClientController;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;

public class ClientChat extends JFrame {
    private JPanel contentPane;
    private JTextField enterText;
    private JButton buttonSend;
    private JList<String> contactsList;
    private JLabel nameChatLabel;
    private JLabel contactsLabel;
    private JButton buttonClear;
    private JList chatList;
    private DefaultListModel<String> chatListField;
    private JButton buttonClearChat;
    private JLabel currentContact;

    private ClientController controller;


    public ClientChat(ClientController controller) {

        this.controller = controller;
        //поле чата
        chatListField = new DefaultListModel<>();
        chatList.setModel(chatListField);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setSize(640, 480);
        setLocationRelativeTo(null);
        setContentPane(contentPane);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                controller.shutdown();
            }
        });
        addListeners();

    }

    private void addListeners() {
        buttonSend.addActionListener(e -> sendMessage());

        enterText.addActionListener(e -> sendMessage());

        buttonClear.addActionListener(e -> enterText.setText(null));

        buttonClearChat.addActionListener(e -> chatListField.clear());

        contactsList.addListSelectionListener(e -> {
            String selectedContact = contactsList.getSelectedValue();
            currentContact.setText(selectedContact);
        });
    }

    private void sendMessage() {
        String message = enterText.getText().trim();
        if (message.isEmpty()) {
            return;
        }
        if (contactsList.getSelectedIndex() < 1) {
            addOwnMessage(message);
            controller.sendMessageToAll(message); //всем
        } else {
            addOwnPrivateMessage(message);
            String username = contactsList.getSelectedValue();
            message = "приватно: " + message;
            controller.sendPrivateMessage(username, message);
        }
        enterText.setText(null);
    }

    private void addOwnPrivateMessage(String message) {
        addMessage(String.format("Я приватно %s: %s", contactsList.getSelectedValue(), message));
    }

    private void addOwnMessage(String message) {
        addMessage("Я: " + message);
    }




    public void addMessage(String message) {
        SwingUtilities.invokeLater(() -> {
            chatListField.addElement(message);
        });
    }



    public void showError(String errorMessage) {
        JOptionPane.showMessageDialog(this, errorMessage);
    }
    public void updateUsers(List<String> users) {
        SwingUtilities.invokeLater(() -> {
            DefaultListModel<String> contactsListField = new DefaultListModel<>();
            //java 8
            for (String user : users) {
                contactsListField.addElement(user);
            }
            contactsList.setModel(contactsListField);
        });
    }
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 4, new Insets(0, 0, 0, 0), -1, -1));
        enterText = new JTextField();
        contentPane.add(enterText, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        buttonSend = new JButton();
        buttonSend.setLabel("Send");
        buttonSend.setText("Send");
        contentPane.add(buttonSend, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        contactsList = new JList();
        contentPane.add(contactsList, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        contactsLabel = new JLabel();
        contactsLabel.setText("Contacts");
        contentPane.add(contactsLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nameChatLabel = new JLabel();
        nameChatLabel.setText("MyChat");
        contentPane.add(nameChatLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonClear = new JButton();
        buttonClear.setLabel("Clear");
        buttonClear.setText("Clear");
        contentPane.add(buttonClear, new com.intellij.uiDesigner.core.GridConstraints(3, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        contentPane.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(350, 250), null, 0, false));
        chatList = new JList();
        scrollPane1.setViewportView(chatList);
        buttonClearChat = new JButton();
        buttonClearChat.setActionCommand("button");
        buttonClearChat.setLabel("ClearChat");
        buttonClearChat.setText("ClearChat");
        contentPane.add(buttonClearChat, new com.intellij.uiDesigner.core.GridConstraints(2, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        currentContact = new JLabel();
        currentContact.setText("");
        contentPane.add(currentContact, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }



    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }



}
